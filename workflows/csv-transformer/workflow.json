{
  "name": "CSV Data Transformer",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "csv-transform",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f7e8a4b0-1234-4567-8901-234567890abc",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
    },
    {
      "parameters": {
        "jsCode": "// Transform CSV data to JSON structure\nconst csvData = $input.first().json.csv_data;\nconst lines = csvData.split('\\n');\nconst headers = lines[0].split(',');\nconst result = [];\n\nfor (let i = 1; i < lines.length; i++) {\n  if (lines[i].trim()) {\n    const values = lines[i].split(',');\n    const obj = {};\n    headers.forEach((header, index) => {\n      obj[header.trim()] = values[index] ? values[index].trim() : '';\n    });\n    result.push(obj);\n  }\n}\n\nreturn {\n  json: {\n    status: 'success',\n    processed_records: result.length,\n    data: result,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "b2c3d4e5-2345-5678-9012-345678901bcd",
      "name": "Transform CSV",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "c3d4e5f6-3456-6789-0123-456789012cde",
              "leftValue": "={{ $json.data.length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d4e5f6g7-4567-7890-1234-567890123def",
      "name": "Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "e5f6g7h8-5678-8901-2345-678901234efg",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"error\",\n  \"message\": \"No data to process\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "f6g7h8i9-6789-9012-3456-789012345fgh",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 400]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Transform CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform CSV": {
      "main": [
        [
          {
            "node": "Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Data": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "12345678-1234-4567-8901-123456789abc",
  "id": "1",
  "tags": [],
  "triggerCount": 1,
  "createdAt": "2024-01-15T10:00:00.000Z",
  "updatedAt": "2024-08-20T14:30:00.000Z"
}