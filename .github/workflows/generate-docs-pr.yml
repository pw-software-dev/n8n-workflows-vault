name: Generate Documentation on PR

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  generate-documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Check if OpenAI API key is configured
      run: |
        if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "⚠️ OPENAI_API_KEY secret is not configured"
          echo "Documentation generation requires OpenAI API access"
          echo "Please configure OPENAI_API_KEY in repository secrets"
          exit 1
        else
          echo "✅ OPENAI_API_KEY is configured"
        fi

    - name: Generate documentation
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "🤖 Starting AI-powered documentation generation..."
        echo "This process analyzes workflows and generates comprehensive metadata and README files"
        echo ""
        
        # Run the documentation generation
        pnpm generate-documentation
        
        echo ""
        echo "📊 Documentation generation completed"

    - name: Check for generated files
      run: |
        echo "🔍 Checking for newly generated or updated files..."
        
        # Check for any changes in workflows directory
        if git diff --quiet workflows/; then
          echo "ℹ️ No documentation changes detected"
          echo "All workflows already have up-to-date documentation"
        else
          echo "📝 Documentation changes detected:"
          git diff --name-status workflows/
          
          # Show summary of changes
          echo ""
          echo "📈 Files changed:"
          git diff --name-only workflows/ | wc -l
          
          echo ""
          echo "📋 Change summary:"
          echo "- metadata.json files: $(git diff --name-only workflows/ | grep -c 'metadata.json' || echo '0')"
          echo "- README.md files: $(git diff --name-only workflows/ | grep -c 'README.md' || echo '0')"
        fi

    - name: Validate generated documentation
      run: |
        echo "✅ Running validation on generated documentation..."
        
        # Validate all workflows to ensure generated content is valid
        pnpm validate-all-workflows
        
        # Check README completeness
        pnpm validate-readme-completeness
        
        echo "🎉 All generated documentation passed validation"

    - name: Create summary comment
      if: github.event_name == 'pull_request'
      run: |
        echo "Creating PR comment with documentation generation summary..."
        
        # Count total workflows
        total_workflows=$(find workflows -name "workflow.json" | wc -l)
        
        # Count workflows with metadata
        workflows_with_metadata=$(find workflows -name "metadata.json" | wc -l)
        
        # Count workflows with READMEs
        workflows_with_readme=$(find workflows -name "README.md" | wc -l)
        
        # Create comment body
        cat > pr-comment.md << 'EOF'
        ## 🤖 Documentation Generation Report
        
        **Status:** ✅ Documentation generation completed successfully
        
        ### 📊 Repository Statistics
        - **Total Workflows:** $total_workflows
        - **Workflows with Metadata:** $workflows_with_metadata
        - **Workflows with README:** $workflows_with_readme
        - **Documentation Coverage:** $(( workflows_with_readme * 100 / total_workflows ))%
        
        ### ✅ Validation Results
        - All workflows passed schema validation
        - All metadata files are valid
        - All README files meet completeness requirements
        
        ### 🔄 Generation Process
        The documentation generation process:
        1. Analyzed workflow.json files using AI
        2. Generated/updated metadata.json files
        3. Created comprehensive README.md files
        4. Validated all generated content
        
        _This comment was generated automatically by the documentation generation workflow._
        EOF
        
        # Replace variables in the comment
        sed -i "s/\$total_workflows/$total_workflows/g" pr-comment.md
        sed -i "s/\$workflows_with_metadata/$workflows_with_metadata/g" pr-comment.md
        sed -i "s/\$workflows_with_readme/$workflows_with_readme/g" pr-comment.md
        
        echo "PR comment created successfully"

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const comment = fs.readFileSync('pr-comment.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  summary:
    runs-on: ubuntu-latest
    needs: generate-documentation
    if: always()
    
    steps:
    - name: Documentation generation summary
      run: |
        echo "📝 Documentation Generation Summary"
        echo "=================================="
        
        if [ "${{ needs.generate-documentation.result }}" == "success" ]; then
          echo "✅ Documentation generation: SUCCESS"
          echo ""
          echo "🎉 All workflow documentation has been processed and validated!"
          echo "📚 Generated documentation includes:"
          echo "  - AI-analyzed metadata.json files"
          echo "  - Comprehensive README.md files"
          echo "  - Schema-validated content"
          echo ""
          echo "🚀 Ready for review and merge!"
        else
          echo "❌ Documentation generation: FAILED"
          echo ""
          echo "💡 Possible issues:"
          echo "  - Missing OPENAI_API_KEY secret"
          echo "  - Invalid workflow.json files"
          echo "  - Network connectivity issues"
          echo ""
          echo "🔧 Please check the logs above for specific error details."
        fi
